name: "hidden_deploy"
input: "data"
input_dim: 20
input_dim: 33
input_dim: 224
input_dim: 224

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
  relu_param {
    negative_slope: 0.1
  }
}


layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "conv1"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ReLU2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "conv2"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ReLU3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "conv3"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv4"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ReLU4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "conv4"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv5"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ReLU5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "conv5"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
  relu_param {
    negative_slope: 0.1
  }
}
#----------------bottlenect layer, conv6 and conv6_1
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv6"
  convolution_param {
    num_output: 1024
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ReLU6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "conv6"
  top: "conv6_1"
  convolution_param {
    num_output: 1024
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "ReLU6_1"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "conv_pr6"
  type: "Convolution"
  bottom: "conv6_1"
  top: "predict_flow6"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 3
    stride: 1
  }
}

layer {
  name: "deconv5"
  type: "Deconvolution"
  bottom: "conv6_1"
  top: "deconv5"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "ReLU_up5"
  type: "ReLU"
  bottom: "deconv5"
  top: "deconv5"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "upsample_flow6to5"
  type: "Deconvolution"
  bottom: "predict_flow6"
  top: "upsampled_flow6_to_5"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "concat_5"
  type: "Concat"
  bottom: "conv5_1"
  bottom: "deconv5"
  bottom: "upsampled_flow6_to_5"
  top: "concat5"
}
layer {
  name: "smooth_conv5"
  type: "Convolution"
  bottom: "concat5"
  top: "smooth_conv5"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv_pr5"
  type: "Convolution"
  bottom: "smooth_conv5"
  top: "predict_flow5"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 3
    stride: 1
  }
}

layer {
  name: "deconv4"
  type: "Deconvolution"
  bottom: "smooth_conv5"
  top: "deconv4"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "ReLU_up4"
  type: "ReLU"
  bottom: "deconv4"
  top: "deconv4"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "upsample_flow5to4"
  type: "Deconvolution"
  bottom: "predict_flow5"
  top: "upsampled_flow5_to_4"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "concat_4"
  type: "Concat"
  bottom: "conv4_1"
  bottom: "deconv4"
  bottom: "upsampled_flow5_to_4"
  top: "concat4"
}
layer {
  name: "smooth_conv4"
  type: "Convolution"
  bottom: "concat4"
  top: "smooth_conv4"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv_pr4"
  type: "Convolution"
  bottom: "smooth_conv4"
  top: "predict_flow4"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 3
    stride: 1
  }
}

layer {
  name: "deconv3"
  type: "Deconvolution"
  bottom: "smooth_conv4"
  top: "deconv3"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "ReLU_up3"
  type: "ReLU"
  bottom: "deconv3"
  top: "deconv3"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "upsample_flow4to3"
  type: "Deconvolution"
  bottom: "predict_flow4"
  top: "upsampled_flow4_to_3"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "concat_3"
  type: "Concat"
  bottom: "conv3_1"
  bottom: "deconv3"
  bottom: "upsampled_flow4_to_3"
  top: "concat3"
}
layer {
  name: "smooth_conv3"
  type: "Convolution"
  bottom: "concat3"
  top: "smooth_conv3"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv_pr3"
  type: "Convolution"
  bottom: "smooth_conv3"
  top: "predict_flow3"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 3
    stride: 1
  }
}

layer {
  name: "deconv2"
  type: "Deconvolution"
  bottom: "smooth_conv3"
  top: "deconv2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "ReLU_up2"
  type: "ReLU"
  bottom: "deconv2"
  top: "deconv2"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "upsample_flow3to2"
  type: "Deconvolution"
  bottom: "predict_flow3"
  top: "upsampled_flow3_to_2"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "concat_2"
  type: "Concat"
  bottom: "conv2_1"
  bottom: "deconv2"
  bottom: "upsampled_flow3_to_2"
  top: "concat2"
}
layer {
  name: "smooth_conv2"
  type: "Convolution"
  bottom: "concat2"
  top: "smooth_conv2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv_pr2"
  type: "Convolution"
  bottom: "smooth_conv2"
  top: "predict_flow2"
  convolution_param {
    num_output: 20
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
####################################
## normalization
#######################################
# multiply by 20 because that should be the actual flow range
layer{
  name: "predict_flow2_scale20"
  type: "Scale"
  bottom: "predict_flow2"
  top: "predict_flow2_scale20"
  scale_param {
    filler {
      type: "constant"
      value: 20
    }
    bias_term : false
  }
  param { 
    lr_mult: 0 
  }
}

# clip values, set boundary to -20~20
layer{
  name: "boudary_1"
  type: "Bias"
  bottom: "predict_flow2_scale20"
  top: "boudary_1"
  bias_param {
    filler {
      type: "constant"
      value: 20
    }
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
}
layer {
  name: "ReLU_boundary2"
  type: "ReLU"
  bottom: "boudary_1"
  top: "boudary_1"
}
layer{
  name: "boudary_3"
  type: "Scale"
  bottom: "boudary_1"
  top: "boudary_3"
  scale_param {
    filler {
      type: "constant"
      value: -1.0
    }
    bias_term : true
    bias_filler {
      type: "constant"
      value: 40
    }
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
}
layer {
  name: "ReLU_boundary4"
  type: "ReLU"
  bottom: "boudary_3"
  top: "boudary_3"
}
layer{
  name: "boudary_5"
  type: "Scale"
  bottom: "boudary_3"
  top: "boudary_5"
  scale_param {
    filler {
      type: "constant"
      value: -1.0
    }
    bias_term : true
    bias_filler {
      type: "constant"
      value: 20
    }
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
}

# minus lower boundary -20, which is +20
layer{
  name: "predict_flow2_bias20"
  type: "Bias"
  bottom: "boudary_5"
  top: "predict_flow2_bias20"
  bias_param {
    filler {
      type: "constant"
      value: 20
    }
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
}

# scale it again by 255/40
layer{
  name: "predict_flow2_scale255"
  type: "Scale"
  bottom: "predict_flow2_bias20"
  top: "predict_flow2_scale255"
  scale_param {
    filler {
      type: "constant"
      value: 6.375
    }
    bias_term : false
  }
  param { 
    lr_mult: 0 
  }
}

# resize it to 224 by 224 in order to match the temporal stream input size
layer {
  name: "predict_flow2_scale_upsample"
  type: "Deconvolution"
  bottom: "predict_flow2_scale255"
  top: "predict_flow2_scale_upsample"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 20
    group: 20
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "bilinear"
    }
    bias_term: false
    engine: CUDNN
  }
}

# -128, mean subtraction
layer{
  name: "predict_flow2_bias128"
  type: "Bias"
  bottom: "predict_flow2_scale_upsample"
  top: "predict_flow2_bias128"
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
}

####################################
## VGG16 starts
#######################################

# name: "vgg16_temporal_stream"
# input: "data"
# input_dim: 50
# input_dim: 20
# input_dim: 224
# input_dim: 224

layer {
  name: "conv1_1_vgg16"
  type: "Convolution"
  bottom: "predict_flow2_bias128"
  top: "conv1_1_vgg16"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1_vgg16"
  type: "ReLU"
  bottom: "conv1_1_vgg16"
  top: "conv1_1_vgg16"
}
layer {
  name: "conv1_2_vgg16"
  type: "Convolution"
  bottom: "conv1_1_vgg16"
  top: "conv1_2_vgg16"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2_vgg16"
  type: "ReLU"
  bottom: "conv1_2_vgg16"
  top: "conv1_2_vgg16"
}
layer {
  name: "pool1_vgg16"
  type: "Pooling"
  bottom: "conv1_2_vgg16"
  top: "pool1_vgg16"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1_vgg16"
  type: "Convolution"
  bottom: "pool1_vgg16"
  top: "conv2_1_vgg16"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1_vgg16"
  type: "ReLU"
  bottom: "conv2_1_vgg16"
  top: "conv2_1_vgg16"
}
layer {
  name: "conv2_2_vgg16"
  type: "Convolution"
  bottom: "conv2_1_vgg16"
  top: "conv2_2_vgg16"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2_vgg16"
  type: "ReLU"
  bottom: "conv2_2_vgg16"
  top: "conv2_2_vgg16"
}
layer {
  name: "pool2_vgg16"
  type: "Pooling"
  bottom: "conv2_2_vgg16"
  top: "pool2_vgg16"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1_vgg16"
  type: "Convolution"
  bottom: "pool2_vgg16"
  top: "conv3_1_vgg16"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1_vgg16"
  type: "ReLU"
  bottom: "conv3_1_vgg16"
  top: "conv3_1_vgg16"
}
layer {
  name: "conv3_2_vgg16"
  type: "Convolution"
  bottom: "conv3_1_vgg16"
  top: "conv3_2_vgg16"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2_vgg16"
  type: "ReLU"
  bottom: "conv3_2_vgg16"
  top: "conv3_2_vgg16"
}
layer {
  name: "conv3_3_vgg16"
  type: "Convolution"
  bottom: "conv3_2_vgg16"
  top: "conv3_3_vgg16"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3_vgg16"
  type: "ReLU"
  bottom: "conv3_3_vgg16"
  top: "conv3_3_vgg16"
}
layer {
  name: "pool3_vgg16"
  type: "Pooling"
  bottom: "conv3_3_vgg16"
  top: "pool3_vgg16"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1_vgg16"
  type: "Convolution"
  bottom: "pool3_vgg16"
  top: "conv4_1_vgg16"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1_vgg16"
  type: "ReLU"
  bottom: "conv4_1_vgg16"
  top: "conv4_1_vgg16"
}
layer {
  name: "conv4_2_vgg16"
  type: "Convolution"
  bottom: "conv4_1_vgg16"
  top: "conv4_2_vgg16"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2_vgg16"
  type: "ReLU"
  bottom: "conv4_2_vgg16"
  top: "conv4_2_vgg16"
}
layer {
  name: "conv4_3_vgg16"
  type: "Convolution"
  bottom: "conv4_2_vgg16"
  top: "conv4_3_vgg16"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3_vgg16"
  type: "ReLU"
  bottom: "conv4_3_vgg16"
  top: "conv4_3_vgg16"
}
layer {
  name: "pool4_vgg16"
  type: "Pooling"
  bottom: "conv4_3_vgg16"
  top: "pool4_vgg16"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1_vgg16"
  type: "Convolution"
  bottom: "pool4_vgg16"
  top: "conv5_1_vgg16"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1_vgg16"
  type: "ReLU"
  bottom: "conv5_1_vgg16"
  top: "conv5_1_vgg16"
}
layer {
  name: "conv5_2_vgg16"
  type: "Convolution"
  bottom: "conv5_1_vgg16"
  top: "conv5_2_vgg16"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2_vgg16"
  type: "ReLU"
  bottom: "conv5_2_vgg16"
  top: "conv5_2_vgg16"
}
layer {
  name: "conv5_3_vgg16"
  type: "Convolution"
  bottom: "conv5_2_vgg16"
  top: "conv5_3_vgg16"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3_vgg16"
  type: "ReLU"
  bottom: "conv5_3_vgg16"
  top: "conv5_3_vgg16"
}
layer {
  name: "pool5_vgg16"
  type: "Pooling"
  bottom: "conv5_3_vgg16"
  top: "pool5_vgg16"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc6_vgg16"
  type: "InnerProduct"
  bottom: "pool5_vgg16"
  top: "fc6_vgg16"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6_vgg16"
  top: "fc6_vgg16"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6_vgg16"
  top: "fc6_vgg16"
  dropout_param {
    dropout_ratio: 0.9
  }
}
layer {
  name: "fc7_vgg16"
  type: "InnerProduct"
  bottom: "fc6_vgg16"
  top: "fc7_vgg16"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7_vgg16"
  top: "fc7_vgg16"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7_vgg16"
  top: "fc7_vgg16"
  dropout_param {
    dropout_ratio: 0.8
  }
}
layer {
  name: "fc8_vgg16"
  type: "InnerProduct"
  bottom: "fc7_vgg16"
  top: "fc8_vgg16"
  inner_product_param {
    num_output: 51
  }
}
